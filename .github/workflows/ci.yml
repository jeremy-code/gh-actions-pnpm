name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [23.8.0]
    permissions:
      actions: write
      attestations: write
      checks: write
      contents: write
      deployments: write
      id-token: write
      issues: write
      discussions: write
      packages: write
      pages: write
      pull-requests: write
      repository-projects: write
      security-events: write
      statuses: write

    steps:
      - name: Check out Git repository
        id: checkout
        uses: actions/checkout@v4

      - name: Temporarily alias `pnpm` to `corepack pnpm`
        run: |
          setup() {
            unset -f main
            local -r local_bin_dir="$HOME/.local/bin" # By default, $HOME/.local/bin is in $PATH
            local -r package_manager="$1"

            mkdir -p "$local_bin_dir"
            cat << EOF >> "$local_bin_dir/$package_manager"
          #!/bin/bash

          corepack $package_manager "\$@"
          rm "$local_bin_dir/$package_manager" # Remove alias after use

          EOF

            chmod u+x "$local_bin_dir/$package_manager" # Make alias executable for current user
          }

          setup pnpm

      - name: Set up Node.js environment
        id: setup_node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm
          registry-url: https://registry.npmjs.org
          always-auth: true

      - name: Enable Node.js corepack shims
        run: corepack enable

      - name: Update `.npmrc` file
        run: |
          cat << EOF >> ${{ env.NPM_CONFIG_USERCONFIG }}

          ; npm
          access=public
          provenance=true

          ; pnpm
          loglevel=`if [[ "$RUNNER_DEBUG" -eq "1" ]]; then echo "debug"; else echo "info"; fi`
          npm-path=`npm config get prefix`/bin/npm
          verify-deps-before-run=install
          EOF

      - name: Install dependencies
        run: pnpm install

      - name: Debug
        run: |
          echo -e "actions/checkout outputs: \n ${{ toJson(steps.checkout.outputs) }}"
          echo -e "actions/setup-node outputs: \n ${{ toJson(steps.setup_node.outputs) }}"
          echo -e "npmrc: \n $(npm config ls -l)"
          echo -e "env: \n ${{ toJson(env) }}"
          echo -e "env(local): \n $(env)"
          echo -e "github: \n ${{ toJson(github) }}"
          echo -e "vars: \n ${{ toJson(vars) }}"
          echo -e "runner: \n ${{ toJson(runner) }}"
          echo -e "pnpm config \n $(pnpm config list)"
          echo -e "pnpm doctor: \n $(pnpm doctor)"
          echo -e "npmrc config user config \n$(cat $NPM_CONFIG_USERCONFIG)"
          echo -e "git config \n $(git config --list)"
          echo -e "node version: \n $(node --version)"
          echo -e "npm version: \n $(npm --version)"
          echo -e "pnpm version: \n $(pnpm --version)"
          echo -e "pnpm store: \n $(pnpm store status)"
          echo -e "corepack version: \n $(corepack -v)"
          echo -e "corepack path: \n $(which corepack)"
          echo -e "pnpm path: \n $(which pnpm)"

      - name: Run command
        run: pnpm run start
